import seaborn as sns
from icecream import ic 
import statistics
import matplotlib.pyplot as plt
import sys
def report(title, l):
    if len(l) != 10:
        ic("ERRRORORORORORO")
    ic(title)
    ic(statistics.mean(l))
    ic(statistics.stdev(l))
    ic(statistics.stdev(l)/statistics.mean(l))

#pickle_10000000 = statistics.mean([4575.832168, 4614.307516, 4586.30781, 4634.360198, 4592.101191, 4567.777092, 4566.919013, 4575.793209, 4567.214421, 4554.464302,])
#rows:10000000: killed
#picklebase64_10000000=statistics.mean([ 6507.102975, 6565.499475, 6502.496882, 6549.318734, 6555.80871, 6524.589226, 6490.236177, 6550.954165, 6503.873496, 6549.984909,])
#picklecompressed_10000000=statistics.mean([ 33240.652342, 33163.009807, 33522.843265, 33203.57834, 33303.033516, 34306.330426, 33161.915244, 33200.540019, 33196.264787, 33113.61934,])

pickle_1 = statistics.mean([3.547496, 2.374518, 2.277984, 2.362306, 2.255886, 2.32706, 2.24994, 2.237375, 2.303271, 2.245398,])
pickle_10 = statistics.mean([2.327146, 2.353829, 2.322221, 2.320127, 2.360002, 2.258519, 2.305724, 2.331182, 2.277242, 2.337828,])
pickle_100 = statistics.mean([2.249782, 2.277675, 2.320099, 2.316136, 2.293526, 2.296212, 2.34993, 2.395856, 2.275219, 2.361212,])
pickle_1000 = statistics.mean([2.459234, 2.39476, 2.505072, 2.367122, 2.608552, 2.437805, 2.375353, 2.387581, 2.393724, 2.421543,])
pickle_10000 = statistics.mean([3.214184, 3.204565, 3.140175, 3.19373, 3.203472, 3.173867, 3.211798, 3.173226, 3.141796, 3.197915,])
pickle_100000 = statistics.mean([13.888383, 13.871747, 13.845952, 13.690241, 13.586953, 14.168643, 13.712479, 13.737031, 13.495104, 14.117518,])
pickle_1000000 = statistics.mean([147.203331, 150.216128, 144.734574, 147.039306, 145.648319, 148.072011, 144.88498, 147.706953, 145.096897, 148.861151,])

json_1 = statistics.mean([5.313943, 5.260783, 5.349511, 5.370275, 5.310727, 5.69716, 5.299009, 5.3889, 5.356998, 5.286509,])
json_10 = statistics.mean([5.50966, 5.299295, 5.290908, 5.335938, 5.437471, 5.337324, 5.257868, 5.467081, 5.287759, 5.361229,])
json_100 = statistics.mean([5.801677, 5.927268, 5.662476, 5.661028, 5.598318, 5.627623, 5.588833, 5.643501, 5.607868, 5.639698,])
json_1000 = statistics.mean([8.315367, 8.145186, 8.197393, 8.153762, 8.105372, 8.043648, 8.125845, 8.065348, 7.962188, 8.406581,])
json_10000 = statistics.mean([34.502182, 33.939933, 33.833295, 33.838473, 33.758852, 33.744316, 33.573548, 33.842626, 33.961151, 33.779344,])
json_100000 = statistics.mean([329.493141, 324.310889, 324.06813, 328.810229, 324.952699, 323.445026, 324.980953, 324.283099, 324.673762, 324.160601,])
json_1000000 = statistics.mean([4247.084055, 4240.98077, 4249.711118, 4239.210953, 4256.398945, 4233.937107, 4254.563244, 4236.181174, 4271.277412, 4234.419296,])

picklebase64_1=statistics.mean([ 2.244583, 2.246854, 2.311042, 2.424668, 2.249426, 2.349202, 2.268455, 2.217178, 2.285908, 2.240045,])
picklebase64_10=statistics.mean([ 2.269907, 2.270039, 2.245053, 2.290198, 2.286387, 2.249702, 2.323144, 2.278259, 2.345283, 2.285874,])
picklebase64_100=statistics.mean([ 2.391163, 2.380706, 2.292572, 2.254108, 2.288452, 2.298948, 2.331865, 2.345029, 2.302245, 2.34676,])
picklebase64_1000=statistics.mean([ 2.595387, 2.589125, 2.605636, 2.589883, 2.80948, 2.607422, 2.570378, 2.596911, 2.52447, 2.600624,])
picklebase64_10000=statistics.mean([ 5.322472, 5.257062, 5.39403, 5.387103, 5.299553, 5.320049, 5.219795, 5.26171, 5.277517, 5.29036,])
picklebase64_100000=statistics.mean([ 34.620187, 34.204442, 34.557951, 34.454101, 34.380614, 34.237092, 34.389962, 34.694848, 34.422677, 34.303552,])
picklebase64_1000000=statistics.mean([ 331.271166, 325.575423, 327.140094, 326.000107, 326.445228, 325.488274, 325.837641, 325.96037, 326.802336, 327.195701,])

picklecompressed_1=statistics.mean([ 2.312407, 2.365802, 2.332355, 2.353945, 2.319133, 2.378674, 2.303433, 2.374774, 2.356558, 2.328272,])
picklecompressed_10=statistics.mean([ 2.357237, 2.384418, 2.469264, 2.336081, 2.376163, 2.399381, 2.337193, 2.400006, 2.357814, 2.308996,])
picklecompressed_100=statistics.mean([ 2.567664, 2.635791, 2.579401, 2.478655, 2.548547, 2.575768, 2.502407, 2.514956, 2.61533, 2.62719,])
picklecompressed_1000=statistics.mean([ 4.91132, 4.752473, 4.718645, 4.888365, 4.752776, 4.848433, 4.742686, 4.778325, 4.907979, 4.783387,])
picklecompressed_10000=statistics.mean([ 30.118616, 30.259906, 30.224643, 30.226906, 30.123546, 30.261921, 30.125918, 30.366213, 30.513981, 30.430315,])
picklecompressed_100000=statistics.mean([ 284.214547, 282.415185, 284.916427, 282.546716, 284.204686, 282.47726, 284.691455, 282.872825, 284.704868, 282.19126,])
picklecompressed_1000000=statistics.mean([ 2956.447037, 2809.760583, 2953.675584, 2811.807101, 2954.120021, 2812.315599, 2957.124621, 2811.695275, 2959.935953, 2811.612279,])

rows= [1, 10, 100, 1000, 10000, 100000, 1000000]#, 10000000]
pickle = [2.3 ,pickle_10 ,pickle_100 ,pickle_1000 ,pickle_10000 ,pickle_100000 ,pickle_1000000]
json = [json_1 ,json_10 ,json_100 ,json_1000 ,json_10000 ,json_100000 ,json_1000000]
picklebase64 = [picklebase64_1 ,picklebase64_10 ,picklebase64_100 ,picklebase64_1000 ,picklebase64_10000 ,picklebase64_100000 ,picklebase64_1000000]
picklecompressed = [picklecompressed_1 ,picklecompressed_10 ,picklecompressed_100 ,picklecompressed_1000 ,picklecompressed_10000 ,picklecompressed_100000 ,picklecompressed_1000000]

data = {
        'x': rows+rows+rows+rows,
        'y': pickle+picklebase64+picklecompressed+json,
        'serialización': ['pickle'] * len(rows) + ['pickle_base64']* len(rows)+['pickle_compressed'] * len(rows) + ['json']* len(rows)
        }
plt.figure(figsize=(7, 5))

sns.barplot(data=data, x='x', y='y', hue='serialización')
plt.yscale('log')
plt.title('')
plt.xlabel('Número de filas leídas')
plt.ylabel('Tiempo(ms)')
plt.show()
#plt.savefig('sns2.png', dpi=200, bbox_inches='tight')


for e1, e2, e3, e4 in zip(pickle, picklebase64, picklecompressed, json):
    print(f"{round(e1, 1)} & {round(e2, 1)} & {round(e3 ,1)} & {round(e4, 1)} \\\\")
